INTRO 

Web development

HTML
CSS
Tailwind CSS
javascript
React
Bootstrap X (will not do)

web dev has two parts -- frontend and backend

backend -- logics (connecting database, talks-data insert and read, filters )

frontend -- view, logics(how will things look)

Day 1 

    #block elemnts  -- takes all the width of view port
    #inline elemnts --  takes only space which we used
    inline-block elements -- acts as inline but we can apply dimensions to it

    #Table 
        thead- headings 
        tbody - content 
        tfoot - information

    #1st <tr> tag
        <th> tag to create single heading
        <td> tag to add data to Table

        #colspan for horizontally merging two cells
        #rowspan for vertically merging two cells

    #FORMS

        label -- to show what we want to take input
            for -- to take refrence we pass its id in input

        input -- to take input from user 
            type -- to tell which kind of data will it accept
            id -- to pass refrenceto for in label
            name -- while retrieving data stored through form we will use value passed in name 
                #NAME IS CASE SENSITIVE 

        Action -- forms storage address

        Method -- two type get and post


            GET -- it is default method, get is not secure # data is present in URL(query parameters) data is visible

            POST -- Secured way, data will get stored in formData 


    #HTML Semantics
        header -- Navbar(logo, list)

        body -- content
            categorisation -- 
                section tag -- landing page , features, reviews

                division tag -- <div> to divide category like left,right or top,bottom

                SEO rules -- 
                    Meta Tag -- Information about web page
                    H1 -- 1 time in a single page
                    H2 -- 3 to 4 times in a single page
                    H3 to H6 -- no limit

        footer -- information (links, address, copyright)




    CSS
        1 Inline CSS - style attribute within the tag

        2 Internal CSS - Headedr me style tag use krke

        3 External CSS - another file (.css) 

        selectors for internal and external CSS --
            tag/element 
            Id selectors
            Class selectors
            Universal selectors
            decendant selectors -any element present in the parent container -
                                                            #relative-container div{
                                                                border: solid 2px skyblue;
                                                            }
        
        difference between all three type of CSS is main prefrence is given to inline CSS 

        after Inline CSS we move on to internal and external CSS, prefrence will be given to the one which will be written last.
    
        the one you want ot be preffered should be written last
    
Day 2


    Box Model in external CSS
        dimension
        border
        padding
        margin

        Units
            Fix-unit -pixels(px)
            Relative unit - (%, vw, vh, rem)
                vw and vh is related to viewport
                % is relative to parent
        
    positions
        relative
        absolute
        fixed
        sticky
    

        when child element is visible out of the parent element it is known as overflow

        In fixed element is fixed on screen element move wrt body (view port)

        sticky -- it is combination of two properties - absolute and fixed 

    Flex --

        it is applied on container and it handles container's child

        justify content - it aligns the child wrt main axis

            space between, space around, space evenly -- handles extra spce around the main axis

            space between -- arrange all the space between the chids(no space on edges)

            space around -- spread all the space equally around the child

            space evenly -- it spread all the space evenly across main axis

        align items -- aligns the child wrt cross-axis

            center -- at the center

            start --  at the top left 
            
            end --  at the bottom left 

        gap -- minimum row and column gap between childs 

        flex-wrap -- doesn't allow to shrink it shifts them to bottom 

Day 3

        colors - 
            1. by name
            2. rgb
            3. rgba
            4. hexadecimal


            cover
            container
            contain

        pseudo selectors --
            hover
            active
            focus

        transition --

            transform -- 
                change into another(1. rotateX(), rotateY(), rotate() in degrees and radian
                2. scaleX(), scaleY(), scale() in multiplier means if 2 is given then it will be 2 times
                3. translateX(200) having +ve and -ve values , +ve values means right and vice-versa ,,,,,,
                translateY(200px) - it is opposite of X , so +ve means bottom and -ve means upward)

        media query - (responsive design)

Day 4
    written within the files

Day 5 
    was Assessment

Day 6
    javascript

            only coding language in MERN
            node js is environment jisme java script run karwaenge
        javascript->1.its a weekly type language
            2.no need to compile before running(no need to define data type)
                code compiles line by line(this behaviour is known as syncronous behaviour-ek line run hoge result aaega tab hi next line pe jaega)
            
            compiler of js->v8 engine->browser main milta hai


        data types - 
            1. Number
            2. String 
            3. Boolean (false values - 0, null, undefine, false)
            4. Null
            5. Undefined



        How to define variables -> var, let , const

                        initialise            declare         reinitialise          redeclare       assign         reassign 

                let         true                true                true                true        true            true

                var         true                 true               false               false       true            true 

                const       true               false                false              false         true           false
        

        Scopes -- Global
                  block - {} 

        
        Stack -->
                it works on LIFO method
            call stack -- execute only one function at a time
                            read - memory allocation state -- write and allocate memory to it 
                            code execution state -- it will run line by line and assigns the value to the allocated memory and print it

Day 7

        git init -- to initialise git in local device
                    U -- it means untrack changes

        Staging area -- its a a waiting lobby, so that we can recheck code.
            git add . -- . is for all files (we can also give a particular file name to upload it only )
            A -- unsaved files in the staging area
        
        git commit -m "#your comment or name of version" 

                OR 
            other way to do it -- 
                            press "i" to write
                            press "esc" to exit writing
                            type ":wq" to save commit

        git log --
                    show all your(commits/versions)
        
        git checkout id --
                    git checkout master -- to go to latest version
                                            OR
                    git checkout main -- also in latest version of git to go to main version of git version control 
        
        branching -- 
                    so that more than 2 people can work on same project

                to create branch --> git branch branch name

                to change branch name --> git branch -M dev

                to check your current branch --> git branch

                to switch branch --> git checkout branch name // git switch branch name

                to create and switch --> git checkout -b branch name

                to connect to online repo on git hub --> git remote add origin link of the repo

                to upload code on online repo --> git push origin main

                to merge branches --> git merge (name of branch from where to take code from)

                to delete branches --> git branch -D name of branch

        git pull --
                it will keep all the branches up to date with the main branch

        Merge conflicts --
                when two or more branches are merged and they have different code at same place then it will create a merge conflict you can
                resolve it like the keep current, keep incoming or keep with prefrence like ehich one is above and which one will come below

Day 8

        written notes within the file

    storage in bytes
        int - 
        float - 6 
        doubl - 8 
        String - 2

Day 9

    Main js--
        Methods -- map, filter, reduce and foreach are donein main.js file notes of those are within it
        Operators -- spread Operator is also on the same file with its notes


    Asynchronous js --
                    Don't wait for result of upper line of code

            methods and functions
                1.setTimeout
                2.setInterval
                3.Promises
                4. async functions
    
    Promises -- done in the file itself can look out form there


Day 10
        DOM--> Document Object Model

    selectors --> 1.getelementsbytagname  -- by the name of the tag
                  2.getelementsbyClass  -- by the name of class given to tags (will bring all tag which has same class name)
                  3.getelementbyid   -- by the id given to the tag which is unique
                  4.queryselector("")  -- returns first matching single element of the type (tagname, .classname, #id)
                  5.queryselectorAll("") -- returns all matching element of the type (tagname, .classname, #id)

                  in all of these only queryselector && getelementbyid returns single element, remaining other elements returns list of elements

    Getters --> 1.InnerText, innerHTML, textContent
                2. .id, .classname, getattribute()
    
                
    Setters --> 1.innertext --  shows html tags as tag
                2.innerHTML -- applies the html tags as tag through js
                3.setattribute("attribute","new value") -- change th value of any attribute
    
    push elements in html --
                            1 .append(push text && element too)
                            2 .appendchild(push element only)

    Events --> any action performed by a user ono a web page. 
        example -- click, mousehover, submit, scroll etc.
        
    Listeners --> which listen to an event continuosly and performs/ a function when event triggers

        e in the callback function -- event reference stores details relatd to event like event origin,event position etc

        e.target -- tells that which element triggers the event

    evemt bubbling --  the event will propogate from the child to parent if both have same event

            e.stoppropogation() --> use this in child to stop propogation

Day 11
        localstorge --  storing data in local storage with the help of JS 

    did some changes to a page which should not lose its data after refreshing folder -- day10-23june\practice\1.js and then stored it in the
    day 11 folder
