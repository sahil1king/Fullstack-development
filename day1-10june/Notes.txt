INTRO 

Web development

HTML
CSS
Tailwind CSS
javascript
React
Bootstrap X (will not do)

web dev has two parts -- frontend and backend

backend -- logics (connecting database, talks-data insert and read, filters )

frontend -- view, logics(how will things look)

Day 1 

    #block elemnts  -- takes all the width of view port
    #inline elemnts --  takes only space which we used
    inline-block elements -- acts as inline but we can apply dimensions to it

    #Table 
        thead- headings 
        tbody - content 
        tfoot - information

    #1st <tr> tag
        <th> tag to create single heading
        <td> tag to add data to Table

        #colspan for horizontally merging two cells
        #rowspan for vertically merging two cells

    #FORMS

        label -- to show what we want to take input
            for -- to take refrence we pass its id in input

        input -- to take input from user 
            type -- to tell which kind of data will it accept
            id -- to pass refrenceto for in label
            name -- while retrieving data stored through form we will use value passed in name 
                #NAME IS CASE SENSITIVE 

        Action -- forms storage address

        Method -- two type get and post


            GET -- it is default method, get is not secure # data is present in URL(query parameters) data is visible

            POST -- Secured way, data will get stored in formData 


    #HTML Semantics
        header -- Navbar(logo, list)

        body -- content
            categorisation -- 
                section tag -- landing page , features, reviews

                division tag -- <div> to divide category like left,right or top,bottom

                SEO rules -- 
                    Meta Tag -- Information about web page
                    H1 -- 1 time in a single page
                    H2 -- 3 to 4 times in a single page
                    H3 to H6 -- no limit

        footer -- information (links, address, copyright)




    CSS
        1 Inline CSS - style attribute within the tag

        2 Internal CSS - Headedr me style tag use krke

        3 External CSS - another file (.css) 

        selectors for internal and external CSS --
            tag/element 
            Id selectors
            Class selectors
            Universal selectors
            decendant selectors -any element present in the parent container -
                                                            #relative-container div{
                                                                border: solid 2px skyblue;
                                                            }
        
        difference between all three type of CSS is main prefrence is given to inline CSS 

        after Inline CSS we move on to internal and external CSS, prefrence will be given to the one which will be written last.
    
        the one you want ot be preffered should be written last
    
Day 2


    Box Model in external CSS
        dimension
        border
        padding
        margin

        Units
            Fix-unit -pixels(px)
            Relative unit - (%, vw, vh, rem)
                vw and vh is related to viewport
                % is relative to parent
        
    positions
        relative
        absolute
        fixed
        sticky
    

        when child element is visible out of the parent element it is known as overflow

        In fixed element is fixed on screen element move wrt body (view port)

        sticky -- it is combination of two properties - absolute and fixed 

    Flex --

        it is applied on container and it handles container's child

        justify content - it aligns the child wrt main axis

            space between, space around, space evenly -- handles extra spce around the main axis

            space between -- arrange all the space between the chids(no space on edges)

            space around -- spread all the space equally around the child

            space evenly -- it spread all the space evenly across main axis

        align items -- aligns the child wrt cross-axis

            center -- at the center

            start --  at the top left 
            
            end --  at the bottom left 

        gap -- minimum row and column gap between childs 

        flex-wrap -- doesn't allow to shrink it shifts them to bottom 

Day 3

        colors - 
            1. by name
            2. rgb
            3. rgba
            4. hexadecimal


            cover
            container
            contain

        pseudo selectors --
            hover
            active
            focus

        transition --

            transform -- 
                change into another(1. rotateX(), rotateY(), rotate() in degrees and radian
                2. scaleX(), scaleY(), scale() in multiplier means if 2 is given then it will be 2 times
                3. translateX(200) having +ve and -ve values , +ve values means right and vice-versa ,,,,,,
                translateY(200px) - it is opposite of X , so +ve means bottom and -ve means upward)

        media query - (responsive design)

Day 4
    written within the files

Day 5 
    was Assessment

Day 6
    javascript

            only coding language in MERN
            node js is environment jisme java script run karwaenge
        javascript->1.its a weekly type language
            2.no need to compile before running(no need to define data type)
                code compiles line by line(this behaviour is known as syncronous behaviour-ek line run hoge result aaega tab hi next line pe jaega)
            
            compiler of js->v8 engine->browser main milta hai


        data types - 
            1. Number
            2. String 
            3. Boolean (false values - 0, null, undefine, false)
            4. Null
            5. Undefined



        How to define variables -> var, let , const

                        initialise            declare         reinitialise          redeclare       assign         reassign 

                let         true                true                true                true        true            true

                var         true                 true               false               false       true            true 

                const       true               false                false              false         true           false
        

        Scopes -- Global
                  block - {} 

        
        Stack -->
                it works on LIFO method
            call stack -- execute only one function at a time
                            read - memory allocation state -- write and allocate memory to it 
                            code execution state -- it will run line by line and assigns the value to the allocated memory and print it
